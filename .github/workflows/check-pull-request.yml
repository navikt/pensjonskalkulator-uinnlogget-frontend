name: Check pull request

on: pull_request

jobs:
  build:
    name: Build application
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: 22.16.0
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      
      - name: Fetch openapi backend types
        run: npx openapi-typescript ${{ github.event.inputs.prod == 'true' && 'https://www.nav.no/pensjon/kalkulator/v3/api-docs/current' || 'https://staging.ekstern.dev.nav.no/pensjon/kalkulator/v3/api-docs/current' }} -o ./src/types/schema.d.ts

      - name: Format backend scheme
        run: npm run format:types

      - name: Run lint
        run: npm run lint


      - name: Build staging application
        if: github.event.inputs.prod != 'true'
        run: npm run build

      - name: Build production application
        if: github.event.inputs.prod == 'true'
        run: npm run build:prod

  run-unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: 22.16.0
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Run unit tests
        run: npm run test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage

