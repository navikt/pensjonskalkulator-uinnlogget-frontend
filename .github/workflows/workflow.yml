name: workflow-uinnlogget-deploy
on:
  push:
    branches:
      - 'main'
      - 'magicbox'
      - 'dreambox'
      - 'catbox'
      
      

jobs:
  build:
    name: Bygg, test og publiser docker image
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.image-creation.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install npm dependencies
        run: npm ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      #Kode under er for Ã¥ hente openapi schema fra backend og generere types
      # - name: Fetch openapi backend types
      #   run: npx openapi-typescript ${{ github.event.inputs.prod == 'true' && 'https://www.nav.no/pensjon/kalkulator/v3/api-docs/current' || 'https://staging.ekstern.dev.nav.no/pensjon/kalkulator/v3/api-docs/current' }} -o ./src/types/schema.d.ts
      # - name: Format backend scheme
      #   run: npm run format:types
      - name: Run lint
        run: npm run lint
      - name: Run test
        run: npm run test
      - name: Build application
        run: npm run build
      - name: Docker create image
        uses: nais/docker-build-push@v0
        id: image-creation
        with:
          team: pensjonskalkulator
          dockerfile: .docker/Dockerfile
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-sandbox:
    name: deploy to dev-gcp
    needs: [ build ]
    if: |
      github.ref_name == 'main' &&
      github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/sandbox.yml
          VAR: image=${{ needs.build.outputs.image }}
  deploy-magicbox:
    name: deploy to magicbox
    needs: [ build ]
    if: |
      github.ref_name == 'magicbox' &&
      github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/magicbox.yml
          VAR: image=${{ needs.build.outputs.image }}
  deploy-dreambox:
    name: deploy to dreambox
    needs: [ build ]
    if: |
      github.ref_name == 'dreambox' &&
      github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/dreambox.yml
          VAR: image=${{ needs.build.outputs.image }}
  deploy-catbox:
    name: deploy to catbox
    needs: [ build ]
    if: |
      github.ref_name == 'catbox' &&
      github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/catbox.yml
          VAR: image=${{ needs.build.outputs.image }}

  codeql-analyse:
    if: startsWith(github.ref_name, 'dev-')
    name: codeql-analyse
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          queries: security-and-quality
          languages: 'javascript'
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:javascript'