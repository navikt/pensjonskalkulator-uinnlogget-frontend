name: workflow-uinnlogget-deploy
on:
  push:
    branches:
      - 'main'
      - 'magicbox'
      - 'dreambox'
      - 'catbox'
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - 'README.md'
  workflow_dispatch:
    inputs:
      prod:
        description: Deploy to production
        type: boolean
        required: false

jobs:
  build:
    name: Build application
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.image-creation.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Fetch openapi backend types
        run: npx openapi-typescript ${{ github.event.inputs.prod == 'true' && 'https://www.nav.no/pensjon/kalkulator/v3/api-docs/current' || 'https://staging.ekstern.dev.nav.no/pensjon/kalkulator/v3/api-docs/current' }} -o ./src/types/schema.d.ts

      - name: Format backend scheme
        run: npm run format:types

      - name: Run lint
        run: npm run lint


      - name: Build staging application
        if: github.event.inputs.prod != 'true'
        run: npm run build

      - name: Build production application
        if: github.event.inputs.prod == 'true'
        run: npm run build:prod

      - name: Docker create image
        uses: nais/docker-build-push@v0
        id: image-creation
        with:
          team: pensjonskalkulator
          dockerfile: .docker/Dockerfile
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  run-unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Run unit tests
        run: npm run test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage


  deploy-sandbox:
    name: deploy to sandbox
    needs: [ build ]
    if: |
      github.ref_name == 'main' &&
      github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/sandbox.yml
          VAR: image=${{ needs.build.outputs.image }}
  deploy-magicbox:
    name: deploy to magicbox
    needs: [ build ]
    if: |
      github.ref_name == 'magicbox' &&
      github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/magicbox.yml,.nais/unleash-dev.yml
          VAR: image=${{ needs.build.outputs.image }}
  deploy-dreambox:
    name: deploy to dreambox
    needs: [ build ]
    if: |
      github.ref_name == 'dreambox' &&
      github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/dreambox.yml,.nais/unleash-dev.yml
          VAR: image=${{ needs.build.outputs.image }}
  deploy-catbox:
    name: deploy to catbox
    needs: [ build ]
    if: |
      github.ref_name == 'catbox' &&
      github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/catbox.yml,.nais/unleash-dev.yml
          VAR: image=${{ needs.build.outputs.image }}

  codeql-analyse:
    if: startsWith(github.ref_name, 'dev-')
    name: codeql-analyse
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          queries: security-and-quality
          languages: 'javascript'
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:javascript'


  deploy-prod:
    name: Deploy to prod-gcp
    needs: [build, run-unit-tests]
    permissions: write-all
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' &&
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.prod == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to prod-gcp
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          IMAGE: ${{ needs.build.outputs.image }}
          RESOURCE: .nais/deploy-prod.yml,.nais/unleash-prod.yml
